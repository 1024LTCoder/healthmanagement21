<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.ManageMapper">
    <resultMap id="cardsPerson" type="cards" autoMapping="true">
        <id column="card_id" property="cardId"/>
        <association property="person" javaType="person" autoMapping="true">
            <id column="per_id" property="perId"/>
        </association>
    </resultMap>

    <!--  ************************卡片管理模块************************   -->

    <!--查询所有的cards信息-->
    <select id="findAllCards" resultMap="cardsPerson" parameterType="cards">
        select * from cards c LEFT JOIN person p ON c.per_id=p.per_id
        <where>
            <if test="cardId!=null">
                AND c.card_id = #{cardId}
            </if>
            <if test="cardNo!=null and cardNo!=''">
                AND card_no LIKE '%${cardNo}%'
            </if>
            <if test="person.perName!=null and person.perName!=''">
                AND per_name LIKE '%${person.perName}%'
            </if>
            <if test="person.perTele!=null and person.perTele!=''">
                AND per_tele LIKE '%${person.perTele}%'
            </if>
            <if test="person.perSex!=null and person.perSex!=''">
                AND per_sex = #{person.perSex}
            </if>
            <if test="person.perBlood!=null and person.perBlood!=''">
                AND per_blood = #{person.perBlood}
            </if>
        </where>
    </select>

    <!--查询cards表中ID的最大值。-->
    <select id="maxCardId" resultType="integer">
        select MAX(card_id) from cards
    </select>

    <!--批量添加cards。-->
    <insert id="addCards" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="cardId" keyColumn="card_id">
        insert into cards
        values
        <foreach collection="list" item="item" separator=",">
            (null,null,#{item.cardsNo},0)
        </foreach>
    </insert>

    <!--通过cardId删除指定的card-->
    <delete id="delCard" parameterType="cards">
        delete from cards where card_id=#{cardId}
    </delete>


    <!--  ************************系统管理模块、用户管理部分************************   -->

    <resultMap id="usersOfficePriority" type="users" autoMapping="true">
        <id column="user_id" property="userId"/>
        <association property="office" javaType="office" autoMapping="true">
            <id column="off_id" property="offId"/>
        </association>
        <association property="priority" javaType="priority" autoMapping="true">
            <id column="prio_id" property="prioId"/>
        </association>
    </resultMap>

    <!--查询所有的users-->
    <select id="queryUsers" resultMap="usersOfficePriority">
        select * from
            users u
        LEFT JOIN
            office o
        ON
            u.off_id=o.off_id
        LEFT JOIN
            priority p
        ON
            u.user_prio_id=p.prio_id
    </select>

    <!--查询通过userId查询单个user对象-->
    <select id="queryUserById" parameterType="users" resultMap="usersOfficePriority">
        select * from
            users u
        LEFT JOIN
            office o
        ON
            u.off_id=o.off_id
        LEFT JOIN
            priority p
        ON
            u.user_prio_id=p.prio_id
        WHERE u.user_id=#{userId}
    </select>

    <!--添加user对象-->
    <insert id="addUser" parameterType="users">
        INSERT INTO users VALUES(null,#{offId},#{userName},#{userPwd},#{userPrioId});
    </insert>

    <!--删除user对象通过userId-->
    <delete id="delUserById" parameterType="users">
        delete from users where user_id=#{userId}
    </delete>

    <update id="updateUserById" parameterType="users">
        UPDATE users
        SET `off_id`=#{offId}, `user_name`=#{userName}, `user_pwd`=#{userPwd}, `user_prio_id`=#{userPrioId}
        WHERE (`user_id`=#{userId});
    </update>

</mapper>